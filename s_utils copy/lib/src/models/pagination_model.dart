///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class PaginationModelMetaLinks {
/*
{
  "url": null,
  "label": "&laquo; 上一页",
  "active": false
}
*/

  String? url;
  String? label;
  bool? active;

  PaginationModelMetaLinks({
    this.url,
    this.label,
    this.active,
  });
  PaginationModelMetaLinks.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    label = json["label"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["label"] = label;
    data["active"] = active;
    return data;
  }
}

class PaginationModelMeta {
/*
{
  "current_page": 1,
  "from": 1,
  "last_page": 1,
  "links": [
    {
      "url": null,
      "label": "&laquo; 上一页",
      "active": false
    }
  ],
  "path": "http://goodie.test/api/explores",
  "per_page": 15,
  "to": 11,
  "total": 11
}
*/

  int? currentPage;
  int? from;
  int? lastPage;
  List<PaginationModelMetaLinks>? links;
  String? path;
  int? perPage;
  int? to;
  int? total;

  PaginationModelMeta({
    this.currentPage,
    this.from,
    this.lastPage,
    this.links,
    this.path,
    this.perPage,
    this.to,
    this.total,
  });
  PaginationModelMeta.fromJson(Map<String, dynamic> json) {
    currentPage = json["current_page"]?.toInt();
    from = json["from"]?.toInt();
    lastPage = json["last_page"]?.toInt();
    if (json["links"] != null) {
      var v = json["links"];
      List<PaginationModelMetaLinks> arr0 = [];
      v.forEach((v) {
        arr0.add(PaginationModelMetaLinks.fromJson(v));
      });
      links = arr0;
    }
    path = json["path"]?.toString();
    perPage = json["per_page"]?.toInt();
    to = json["to"]?.toInt();
    total = json["total"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["current_page"] = currentPage;
    data["from"] = from;
    data["last_page"] = lastPage;
    if (links != null) {
      var v = links!;
      List arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data["links"] = arr0;
    }
    data["path"] = path;
    data["per_page"] = perPage;
    data["to"] = to;
    data["total"] = total;
    return data;
  }
}

class PaginationModelLinks {
/*
{
  "first": "http://goodie.test/api/explores?page=1",
  "last": "http://goodie.test/api/explores?page=1",
  "prev": null,
  "next": null
}
*/

  String? first;
  String? last;
  String? prev;
  String? next;

  PaginationModelLinks({
    this.first,
    this.last,
    this.prev,
    this.next,
  });
  PaginationModelLinks.fromJson(Map<String, dynamic> json) {
    first = json["first"]?.toString();
    last = json["last"]?.toString();
    prev = json["prev"]?.toString();
    next = json["next"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["first"] = first;
    data["last"] = last;
    data["prev"] = prev;
    data["next"] = next;
    return data;
  }
}

class PaginationModel {
/*
{
  "links": {
    "first": "http://goodie.test/api/explores?page=1",
    "last": "http://goodie.test/api/explores?page=1",
    "prev": null,
    "next": null
  },
  "meta": {
    "current_page": 1,
    "from": 1,
    "last_page": 1,
    "links": [
      {
        "url": null,
        "label": "&laquo; 上一页",
        "active": false
      }
    ],
    "path": "http://goodie.test/api/explores",
    "per_page": 15,
    "to": 11,
    "total": 11
  }
}
*/

  PaginationModelLinks? links;
  PaginationModelMeta? meta;

  PaginationModel({
    this.links,
    this.meta,
  });
  PaginationModel.fromJson(Map<String, dynamic> json) {
    links = (json["links"] != null) ? PaginationModelLinks.fromJson(json["links"]) : null;
    meta = (json["meta"] != null) ? PaginationModelMeta.fromJson(json["meta"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (links != null) {
      data["links"] = links!.toJson();
    }
    if (meta != null) {
      data["meta"] = meta!.toJson();
    }
    return data;
  }
}
